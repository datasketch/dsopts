[{"path":"/articles/colorsprep_options.html","id":"color_palette_categorical","dir":"Articles","previous_headings":"","what":"color_palette_categorical","title":"colorprep options","text":"Specifies color palette used categorical data category represented different color. argument takes list colors valid format. default value list(#385573, #ffa92a, #f06142, #99e8b3, #32a8ce, #996295, #e59fd7) hdtype list type colors (Lst[Clr]).","code":""},{"path":"/articles/colorsprep_options.html","id":"color_palette_sequential","dir":"Articles","previous_headings":"","what":"color_palette_sequential","title":"colorprep options","text":"Specifies color palette used sequential data, every color represent sequence gradient. Typically used show intensity magnitude. received list colors valid format, default value list(#b8f3ca, #add79c, #8dbd93, #70a38e, #568989, #3f6f83, #28557d)hd_type list type colors (Lst[Clr]).","code":""},{"path":"/articles/colorsprep_options.html","id":"color_by","dir":"Articles","previous_headings":"","what":"color_by","title":"colorprep options","text":"Specifies variable used color elements visualization. determines elements colored based different categories groups. set NULL, default color scale often applied, expects text value representing variable name. hdtype Text (txt).","code":""},{"path":"/articles/colorsprep_options.html","id":"color_palette_type","dir":"Articles","previous_headings":"","what":"color_palette_type","title":"colorprep options","text":"Specifies type color palette used visualization. defaults NULL possible values include “categorical,” “sequential,” “diverging.”. hdtype Categorical (Cat).","code":""},{"path":"/articles/dataprep_options.html","id":"agg","dir":"Articles","previous_headings":"","what":"agg","title":"dataprep options","text":"Determines data summarized combined (e.g., sums, averages, maximums, minimums). expects character value specifying aggregation function (mean, max, min, etc.). default value “sum,” hd_type Categorical (Cat).","code":""},{"path":"/articles/dataprep_options.html","id":"agg_na_rm","dir":"Articles","previous_headings":"","what":"agg_na_rm","title":"dataprep options","text":"Indicates whether missing values (NA) removed aggregating data. expects value type logical, represents boolean values (possible values True False). default, value TRUE, hd_type Check (Chk).","code":""},{"path":"/articles/dataprep_options.html","id":"agg_text","dir":"Articles","previous_headings":"","what":"agg_text","title":"dataprep options","text":"Used label column name indicating type aggregation performed data. default value NULL hd_type Txt (Text). Possible values include ‘sum VAR,’ ‘mean VAR,’ ‘max VAR,’ indicating aggregation type (summed, averaged, maximum value taken) data column.","code":""},{"path":"/articles/dataprep_options.html","id":"drop_na","dir":"Articles","previous_headings":"","what":"drop_na","title":"dataprep options","text":"Enhances clarity visual representations excluding missing data (NA) set TRUE. hdtype Chk (Check), expecting logical value (TRUE FALSE) default, value FALSE.","code":""},{"path":"/articles/dataprep_options.html","id":"drop_na_var2","dir":"Articles","previous_headings":"","what":"drop_na_var2","title":"dataprep options","text":"Removes missing data (NA) second variable visualization. default value FALSE, hdtype Chk (Check), possible values TRUE FALSE.","code":""},{"path":"/articles/dataprep_options.html","id":"format_number_prefix","dir":"Articles","previous_headings":"","what":"format_number_prefix","title":"dataprep options","text":"Formats numeric values using SI prefixes represent large numbers readable format k (thousands), M (millions) numeric values.expects logical value (TRUE FALSE), default value FALSE hdtype chk (Check).","code":""},{"path":"/articles/dataprep_options.html","id":"format_sample_cat","dir":"Articles","previous_headings":"","what":"format_sample_cat","title":"dataprep options","text":"Allows specifying categorical data formatted, whether convert uppercase, lowercase, etc. hdtype Txt (text) default value NULL, means default formatting applied.","code":""},{"path":"/articles/dataprep_options.html","id":"format_sample_dat","dir":"Articles","previous_headings":"","what":"format_sample_dat","title":"dataprep options","text":"Used format date-type data allows specify date-type data formatted (example YYYY-MM-DD DD/MM/YYYY). hdtype Txt (text) default value NULL, indicating specific formatting applied default.","code":""},{"path":"/articles/dataprep_options.html","id":"format_sample_num","dir":"Articles","previous_headings":"","what":"format_sample_num","title":"dataprep options","text":"Used set format numbers visualization. format specified axes, numbers use format specified argument. default value 1500(Review) argument expects character type (Review).","code":""},{"path":"/articles/dataprep_options.html","id":"na_label","dir":"Articles","previous_headings":"","what":"na_label","title":"dataprep options","text":"Replaces NA values dataset specified label. example, setting na_label = “Available” display “Available” instead NA visual representation data. hdtype Txt (text) expects character type value.","code":""},{"path":"/articles/dataprep_options.html","id":"percentage","dir":"Articles","previous_headings":"","what":"percentage","title":"dataprep options","text":"Calculates percentage indicated numerical variable. default value FALSE, hdtype chk (check) argument expects logical value (TRUE FALSE)","code":""},{"path":"/articles/dataprep_options.html","id":"percentage_col","dir":"Articles","previous_headings":"","what":"percentage_col","title":"dataprep options","text":"Specifies name names categorical variable(s) want calculate percentages. example, dataset columns “category” “value” representing different categories corresponding values, can use percentage_col = “category” calculate percentage category. default value NULL, hdtype Txt (text).","code":""},{"path":"/articles/dataprep_options.html","id":"percentage_intra","dir":"Articles","previous_headings":"","what":"percentage_intra","title":"dataprep options","text":"Calculates percentages within individual categories groups visualization. Defaulting FALSE, expect logical value hdtype Chk (Check).","code":""},{"path":"/articles/dataprep_options.html","id":"percentage_name","dir":"Articles","previous_headings":"","what":"percentage_name","title":"dataprep options","text":"Specifies character value used name column containing calculated percentages. used provide descriptive name percentage column output visualization dataset percentage TRUE. hdtype Txt (text) type input character (text).","code":""},{"path":"/articles/dataprep_options.html","id":"tooltip_agg_collapse_rows_template","dir":"Articles","previous_headings":"","what":"tooltip_agg_collapse_rows_template","title":"dataprep options","text":"Controls aggregation data tooltips, determining whether similar related rows collapsed single entry tooltip avoid repetition. takes dataframe template inputs returns column strings applied template. template can apply different aggregations mean max. hdtype Cat (categorical) possible values functions sum, mean, etc., used specify type aggregation tooltip.","code":""},{"path":"/articles/dataprep_options.html","id":"tooltip_include_all_vars","dir":"Articles","previous_headings":"","what":"tooltip_include_all_vars","title":"dataprep options","text":"Includes available variables entered dataframe visualization. default value FALSE hdtype Chk (Check).","code":""},{"path":"/articles/dataprep_options.html","id":"tooltip_sep_all_vars","dir":"Articles","previous_headings":"","what":"tooltip_sep_all_vars","title":"dataprep options","text":"Specifies separator used tooltips multiple variables included, allowing clear separation organization information. hdtype Cat (categorical).","code":""},{"path":"/articles/dataprep_options.html","id":"tooltip_template","dir":"Articles","previous_headings":"","what":"tooltip_template","title":"dataprep options","text":"Used customization template tooltips, template allows customize content format tooltips visualization, using specific variables dataframe display detailed relevant information hovering elements visualization.hdtype Txt (text), possible values text match names variables dataframe.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Camila Achuri. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Achuri C (2024). dsopts: dsopts. R package version 0.0.0.9000.","code":"@Manual{,   title = {dsopts: dsopts},   author = {Camila Achuri},   year = {2024},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"dsopts","dir":"","previous_headings":"","what":"dsopts ","title":"dsopts ","text":"goal dsopts provide set options used datasketch data visualization processing packages","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"dsopts ","text":"install development version dsopts GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"datasketch/dsopts\")"},{"path":"/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"dsopts ","text":"see available options use: dsopts_available() get defaults override defaults override defaults list options","code":"library(dsopts) ## basic example code  # See all available options for a category dsopts_available(\"treemap\") #> [1] \"treemap_direction\"     \"treemap_layers\"        \"treemap_layers_params\" #> [4] \"treemap_layout\"  # See all available options for a category dsopts_available(\"zoom\") #> [1] \"map_zoom_delta\" \"map_zoom_snap\"  \"x_max\"          \"y_max\"          #> [5] \"zoom_level\"     \"zoom_max\"       \"zoom_min\"       \"zoom_show\"  # Can handle multiple categories  # This returns the options with both categories dsopts_available(c(\"map\", \"bubble\")) #> [1] \"bubble_max\"     \"bubble_min\"     \"bubble_opacity\"  # This returns the options with any of categories dsopts_available(c(\"map\", \"bubble\"), type = \"any_of\") #>  [1] \"border_opacity\"         \"bubble_max\"             \"bubble_min\"             #>  [4] \"bubble_opacity\"         \"map_bubble_cluster\"     \"map_graticule\"          #>  [7] \"map_graticule_interval\" \"map_name\"               \"map_name_layers_params\" #> [10] \"map_popup\"              \"map_projection_params\"  \"map_zoom_delta\"         #> [13] \"map_zoom_snap\"          \"zoom_level\" dsopts_default(categories = \"donut\") #> $donut_width #> [1] 2 #>  #> $sort #> [1] \"no\" dsopts_merge(donut_width = 1, categories = \"donut\") #> $donut_width #> [1] 1 #>  #> $sort #> [1] \"no\" opts <- list(     donut_width = 2   )   dsopts_merge(donut_width = 1, opts = opts, categories = \"donut\") #> $donut_width #> [1] 2 #>  #> $sort #> [1] \"no\""},{"path":"/reference/dsopts-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dsopts: dsopts — dsopts-package","title":"dsopts: dsopts — dsopts-package","text":"package (one paragraph).","code":""},{"path":"/reference/dsopts-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dsopts: dsopts — dsopts-package","text":"Maintainer: Camila Achuri first.last@example.com (ORCID)","code":""},{"path":"/reference/dsopts_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Available Options — dsopts_available","title":"Retrieve Available Options — dsopts_available","text":"function retrieves available options dsopts package, optionally filtered specified categories.","code":""},{"path":"/reference/dsopts_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Available Options — dsopts_available","text":"","code":"dsopts_available(categories = NULL, type = \"all_of\")"},{"path":"/reference/dsopts_available.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Available Options — dsopts_available","text":"categories vector character strings specifying categories options retrieve. NULL (default), categories considered. type character string specifying type filter apply categories specified. Default \"all_of\".","code":""},{"path":"/reference/dsopts_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Available Options — dsopts_available","text":"sorted vector names available options. categories specified, options categories returned.","code":""},{"path":"/reference/dsopts_available.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Available Options — dsopts_available","text":"","code":"if (FALSE) { # Assuming 'my_category' as a valid option category available_opts <- dsopts_available(categories = 'my_category') }"},{"path":"/reference/dsopts_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Default Options for a Specific Category — dsopts_default","title":"Retrieve Default Options for a Specific Category — dsopts_default","text":"function retrieves default options dsopts package specific category. category specified, returns default options categories.","code":""},{"path":"/reference/dsopts_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Default Options for a Specific Category — dsopts_default","text":"","code":"dsopts_default(categories = NULL, type = \"all_of\")"},{"path":"/reference/dsopts_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Default Options for a Specific Category — dsopts_default","text":"categories character string specifying category options retrieve. NULL (default), categories considered. type all_of any_of multiples categories provided","code":""},{"path":"/reference/dsopts_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Default Options for a Specific Category — dsopts_default","text":"named list default options. category specified, options category returned.","code":""},{"path":"/reference/dsopts_default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Default Options for a Specific Category — dsopts_default","text":"","code":"if (FALSE) { # Assuming 'category' as a valid option category default_opts <- dsopts_default(category = 'my_category') }"},{"path":"/reference/dsopts_merge.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Default and User-Defined Options — dsopts_merge","title":"Merge Default and User-Defined Options — dsopts_merge","text":"function merges user-defined options default options dsopts package. category specified, options category considered. User-defined options overwrite default ones.","code":""},{"path":"/reference/dsopts_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Default and User-Defined Options — dsopts_merge","text":"","code":"dsopts_merge(..., categories = NULL)"},{"path":"/reference/dsopts_merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Default and User-Defined Options — dsopts_merge","text":"... User-defined options merge defaults. category character string specifying category options merge. NULL (default), categories considered.","code":""},{"path":"/reference/dsopts_merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Default and User-Defined Options — dsopts_merge","text":"named list merged options. category specified, options category returned.","code":""},{"path":"/reference/dsopts_merge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge Default and User-Defined Options — dsopts_merge","text":"","code":"if (FALSE) { # Assuming 'my_option' as a valid option name and 'my_category' as a valid option category merged_opts <- dsopts_merge(my_option = 'my_value', category = 'my_category') }"},{"path":"/reference/dsopt_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Default Option — dsopt_default","title":"Retrieve Default Option — dsopt_default","text":"function retrieves default value specified option dsopts package.","code":""},{"path":"/reference/dsopt_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Default Option — dsopt_default","text":"","code":"dsopt_default(opt)"},{"path":"/reference/dsopt_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Default Option — dsopt_default","text":"opt character string specifying name option whose default value retrieved.","code":""},{"path":"/reference/dsopt_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Default Option — dsopt_default","text":"default value specified option. option exist, returns NULL.","code":""},{"path":"/reference/dsopt_default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Default Option — dsopt_default","text":"","code":"if (FALSE) { # Assuming 'my_option' as a valid option name default_opt <- dsopt_default(opt = 'my_option') }"}]
